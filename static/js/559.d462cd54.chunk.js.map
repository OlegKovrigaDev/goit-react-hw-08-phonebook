{"version":3,"file":"static/js/559.d462cd54.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from '../../redux/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = { name: name, number: number };\n\n    const isContactExist = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${contact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    const isNumberExist = contacts.find(\n      ({ number }) =>\n        contact.number.replace(/\\D/g, '') === number.replace(/\\D/g, '')\n    );\n\n    if (isNumberExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number ${contact.number} is already in contacts!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleNameChange = e => setName(e.target.value);\n\n  const handleNumberChange = e => setNumber(e.target.value);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <br />\n      <label>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleNumberChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact, editContatc } from '../../redux/operations';\nimport { Modal, Input, Button, message, Popconfirm } from 'antd';\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const confirm = e => {\n    handleDelete(e.target.value);\n    message.success('Click on Yes');\n  };\n  const cancel = e => message.error('Click on No');\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  const handleEdit = () => setShowModal(true);\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContatc({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => setShowModal(false);\n\n  const handleNameChange = e => setNewName(e.target.value);\n\n  const handleNumberChange = e => setNewNumber(e.target.value);\n\n  return (\n    <li>\n      <span>{contact.name}</span>\n      <a href={`tel:${contact.number}`}>{contact.number}</a>\n      <button onClick={handleEdit}>Edit</button>\n\n      <Popconfirm\n        title=\"Delete the contact\"\n        description=\"Are you sure to delete this contact?\"\n        onConfirm={confirm}\n        onCancel={cancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <button danger>Add</button>\n      </Popconfirm>\n\n      <Modal\n        open={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" onClick={handleSave}>\n            Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>New Name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label>New Number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number format could be: +1 555 1234567 or 555 1234567.\"\n            required\n          />\n        </div>\n      </Modal>\n    </li>\n  );\n}\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { fetchContacts } from '../../redux/operations';\nimport { Loader } from '../Loader/Loader';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nexport default function ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error ? (\n        <Loader />\n      ) : filteredContacts.length === 0 && !error ? (\n        <p>The Phonebook is empty. Add your first contact.</p>\n      ) : (\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} contact={{ id, name, number }} />\n        ))\n      )}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => dispatch(setFilter(e.target.value.trim()));\n\n  return (\n    <div>\n      <label>\n        Filter contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search by name\"\n          value={filter}\n          onChange={handleFilterChange}\n          disabled={useSelector(selectContacts).length === 0}\n        />\n      </label>\n    </div>\n  );\n}\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook📱</title>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","onSubmit","e","preventDefault","contact","find","Notiflix","concat","isNumberExist","_ref2","replace","addContact","children","_jsx","type","placeholder","value","onChange","target","pattern","title","required","showModal","setShowModal","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","handleDelete","deleteContact","id","handleCancel","href","onClick","Popconfirm","description","onConfirm","message","onCancel","okText","cancelText","danger","Modal","open","footer","Button","editContatc","className","Input","ContactList","filteredContacts","useEffect","fetchContacts","Loader","length","map","ContactItem","Filter","setFilter","trim","disabled","_Fragment","HelmetProvider","Helmet","ContactForm"],"sourceRoot":""}