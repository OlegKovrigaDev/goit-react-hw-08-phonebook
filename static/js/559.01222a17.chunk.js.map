{"version":3,"file":"static/js/559.01222a17.chunk.js","mappings":"sQAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EACrCC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAC5CC,EAAkB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,SAAU,EAEpDC,GAAyBC,EAAAA,EAAAA,IACpC,CAACX,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAO,GAAO,OAAAA,EAAJC,KACnBC,cAAcC,SAASV,EAAOS,cAAc,GAErD,I,iDCkFF,EAvFoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACXf,GAAWgB,EAAAA,EAAAA,IAAYlB,GAC7BmB,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BN,EAAIQ,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAe,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAU,CAAElB,KAAMA,EAAMa,OAAQA,GAMtC,GAJuBxB,EAAS8B,MAC9B,SAAApB,GAAO,OAAAA,EAAJC,KAAgBC,gBAAkBiB,EAAQlB,KAAKC,aAAa,IAI/DmB,IAAAA,OAAAA,QACE,QAAQ,qBAADC,OACcH,EAAQlB,KAAI,oBACjC,UAJJ,CASA,IAAMsB,EAAgBjC,EAAS8B,MAC7B,SAAAI,GAAA,IAAGV,EAAMU,EAANV,OAAM,OACPK,EAAQL,OAAOW,QAAQ,MAAO,MAAQX,EAAOW,QAAQ,MAAO,GAAG,IAG/DF,EACFF,IAAAA,OAAAA,QACE,QAAQ,UAADC,OACGH,EAAQL,OAAM,4BACxB,OAKJV,GAASsB,EAAAA,EAAAA,IAAWP,IACpBR,EAAQ,IACRI,EAAU,IAlBV,CAmBF,EAMA,OACEY,EAAAA,EAAAA,MAAA,QAAMC,SAAUZ,EAAaa,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,OACL/B,KAAK,OACLgC,YAAY,aACZC,KAAK,QACLC,MAAOlC,EACPmC,SAbmB,SAAAnB,GAAC,OAAIN,EAAQM,EAAEoB,OAAOF,MAAO,EAchDG,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,QAAQX,EAAAA,EAAAA,KAACY,EAAAA,EAAY,OAEvBZ,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,MACL/B,KAAK,SACLgC,YAAY,qBACZC,KAAK,QACLC,MAAOrB,EACPsB,SAxBqB,SAAAnB,GAAC,OAAIF,EAAUE,EAAEoB,OAAOF,MAAO,EAyBpDG,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,QAAQX,EAAAA,EAAAA,KAACa,EAAAA,EAAa,OAExBb,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLV,KAAK,QACLF,KAAK,UACLa,QAAS7B,EACT8B,MAAO,CAAEC,OAAQ,IAAKlB,SACvB,kBAKP,E,4DCvFQmB,EAASC,EAAAA,EAAAA,KAkGjB,MAhGA,SAAoBjD,GAAe,IAAZmB,EAAOnB,EAAPmB,QACff,GAAWC,EAAAA,EAAAA,MAEjBE,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1C2C,EAASzC,EAAA,GAAE0C,EAAY1C,EAAA,GAC9BG,GAA8BJ,EAAAA,EAAAA,UAASW,EAAQlB,MAAKY,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA7CwC,EAAOvC,EAAA,GAAEwC,EAAUxC,EAAA,GAC1ByC,GAAkC9C,EAAAA,EAAAA,UAASW,EAAQL,QAAOyC,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAAnDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAQxBG,EAAe,WAAH,OAAStD,GAASuD,EAAAA,EAAAA,IAAcxC,EAAQyC,IAAK,EASzDC,EAAe,WAAH,OAASV,GAAa,EAAO,EAM/C,OACExB,EAAAA,EAAAA,MAACsB,EAAAA,EAAI,CACHV,MAAOpB,EAAQlB,KACf6D,OACEhC,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CAACZ,KAAK,UAAUa,QAjBV,WAAH,OAASM,GAAa,EAAM,EAiBKtB,SAAC,SAI9CiB,MAAO,CAAEiB,MAAO,IAAKC,aAAc,IAAKnC,SAAA,EAExCC,EAAAA,EAAAA,KAACkB,EAAI,CACHT,MAAM,iBACN0B,aAAanC,EAAAA,EAAAA,KAAA,KAAGoC,KAAI,OAAA5C,OAASH,EAAQL,QAASe,SAAEV,EAAQL,SACxDgC,MAAO,CAAEkB,aAAc,GAAIG,SAAU,OAGvCrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACT7B,MAAM,qBACN0B,YAAY,uCACZI,UAxCU,WACdX,IACAY,EAAAA,GAAAA,QAAgB,kBAClB,EAsCMC,SArCS,WAAH,OAASD,EAAAA,GAAAA,MAAc,WAAY,EAsCzCE,OAAO,MACPC,WAAW,KAAI5C,UAEfC,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CAAC8B,QAAM,EAAA7C,SAAC,cAGjBC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAK,CACJC,QAAS1B,EACTqB,SAAUV,EACVgB,OAAQ,EACN/C,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CAAcC,QAASgB,EAAahC,SAAC,UAAhC,WAGZC,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CAAYZ,KAAK,UAAUa,QA7CvB,WACjBM,GAAa,GACb/C,GAAS0E,EAAAA,EAAAA,IAAY,CAAElB,GAAIzC,EAAQyC,GAAI3D,KAAMmD,EAAStC,OAAQ0C,IAChE,EA0C8D3B,SAAC,QAA3C,SAGZA,UAEFF,EAAAA,EAAAA,MAAA,OAAKoD,UAAU,gBAAelD,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,OACLG,MAAOiB,EACPhB,SAhDe,SAAAnB,GAAC,OAAIoC,EAAWpC,EAAEoB,OAAOF,MAAO,EAiD/CG,QAAQ,wHACRC,MAAM,yIACNC,UAAQ,KAEVV,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,OACLG,MAAOqB,EACPpB,SAvDiB,SAAAnB,GAAC,OAAIwC,EAAaxC,EAAEoB,OAAOF,MAAO,EAwDnDG,QAAQ,+FACRC,MAAM,+DACNC,UAAQ,WAMpB,E,UCtDA,EAhCoB,WAClB,IAAMwC,GAAmB1E,EAAAA,EAAAA,IAAYR,GAC/BH,GAAQW,EAAAA,EAAAA,IAAYZ,GACpBG,GAAYS,EAAAA,EAAAA,IAAYV,GAExBQ,GAAWC,EAAAA,EAAAA,MAMjB,OAJA4E,EAAAA,EAAAA,YAAU,WACR7E,GAAS8E,EAAAA,EAAAA,MACX,GAAG,CAAC9E,KAGFuB,EAAAA,EAAAA,MAAA,OACEmB,MAAO,CACLqC,QAAS,OACTC,SAAU,OACVC,eAAgB,SAChBC,IAAK,IACLzD,SAAA,CAEDmD,EAAiBO,KAAI,SAAAvF,GAAA,IAAG4D,EAAE5D,EAAF4D,GAAI3D,EAAID,EAAJC,KAAMa,EAAMd,EAANc,OAAM,OACvCgB,EAAAA,EAAAA,KAAC0D,EAAW,CAAUrE,QAAS,CAAEyC,GAAAA,EAAI3D,KAAAA,EAAMa,OAAAA,IAAzB8C,EAAqC,IAExD/D,IAAcF,IAASmC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACvD,KAAK,UACpCvC,IAASmC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACpB,QAAQ,0BAA0BtC,KAAK,WACtDnC,GAAyC,IAA5BmF,EAAiBW,SAC9B7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAK,CAAC3B,YAAY,sDAI3B,E,UCpCQ4B,EAAW9D,EAAAA,EAAAA,OA0BnB,EAxBe,WACb,IAAM3B,GAAWC,EAAAA,EAAAA,MACXZ,GAASa,EAAAA,EAAAA,IAAYd,GAI3B,OACEsC,EAAAA,EAAAA,KAAA,OAAKgB,MAAO,CAAEkB,aAAc,IAAKnC,UAC/BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,4BAELC,EAAAA,EAAAA,KAAC+D,EAAM,CACL7D,KAAK,OACL/B,KAAK,SACLgC,YAAY,iBACZC,KAAK,QACLC,MAAO1C,EACP2C,SAZmB,SAAAnB,GAAC,OAAIb,GAAS0F,EAAAA,EAAAA,GAAU7E,EAAEoB,OAAOF,MAAM4D,QAAS,EAanEC,SAAiD,KAAvC1F,EAAAA,EAAAA,IAAYlB,GAAgBuG,aAKhD,E,SCLA,MAlBA,WACE,OACE7D,EAAAA,EAAAA,KAAAmE,EAAAA,SAAA,CAAApE,UACEF,EAAAA,EAAAA,MAACuE,EAAAA,GAAc,CAAArE,SAAA,EACbC,EAAAA,EAAAA,KAACqE,EAAAA,GAAM,CAAAtE,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBAETF,EAAAA,EAAAA,MAACyE,EAAAA,EAAS,CAAAvE,SAAA,EACRC,EAAAA,EAAAA,KAACuE,EAAW,KACZvE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACwE,EAAM,KACPxE,EAAAA,EAAAA,KAACyE,EAAW,WAKtB,C,qECrBaH,E,QAAYI,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sJ","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","pages/Container.styled.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from '../../redux/selectors';\nimport { Input, Button } from 'antd';\nimport { UserOutlined, PhoneOutlined } from '@ant-design/icons';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = { name: name, number: number };\n\n    const isContactExist = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${contact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    const isNumberExist = contacts.find(\n      ({ number }) =>\n        contact.number.replace(/\\D/g, '') === number.replace(/\\D/g, '')\n    );\n\n    if (isNumberExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number ${contact.number} is already in contacts!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleNameChange = e => setName(e.target.value);\n\n  const handleNumberChange = e => setNumber(e.target.value);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name:</label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        size=\"large\"\n        value={name}\n        onChange={handleNameChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        prefix={<UserOutlined />}\n      />\n      <label>Number:</label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        size=\"large\"\n        value={number}\n        onChange={handleNumberChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        prefix={<PhoneOutlined />}\n      />\n      <Button\n        size=\"large\"\n        type=\"primary\"\n        onClick={handleSubmit}\n        style={{ margin: 12 }}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact, editContatc } from '../../redux/operations';\nimport { Modal, Input, Button, message, Popconfirm, Card } from 'antd';\n\nconst { Meta } = Card;\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const confirm = () => {\n    handleDelete();\n    message.success('Contact deleted');\n  };\n  const cancel = () => message.error('Canceled');\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  const handleEdit = () => setShowModal(true);\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContatc({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => setShowModal(false);\n\n  const handleNameChange = e => setNewName(e.target.value);\n\n  const handleNumberChange = e => setNewNumber(e.target.value);\n\n  return (\n    <Card\n      title={contact.name}\n      extra={\n        <Button type=\"primary\" onClick={handleEdit}>\n          Edit\n        </Button>\n      }\n      style={{ width: 300, marginBottom: 16 }}\n    >\n      <Meta\n        title=\"Contact Number\"\n        description={<a href={`tel:${contact.number}`}>{contact.number}</a>}\n        style={{ marginBottom: 12, fontSize: 24 }}\n      />\n\n      <Popconfirm\n        title=\"Delete the contact\"\n        description=\"Are you sure to delete this contact?\"\n        onConfirm={confirm}\n        onCancel={cancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <Button danger>Delete</Button>\n      </Popconfirm>\n\n      <Modal\n        visible={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" type=\"primary\" onClick={handleSave}>\n            Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>New Name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label>New Number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number format could be: +1 555 1234567 or 555 1234567.\"\n            required\n          />\n        </div>\n      </Modal>\n    </Card>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Empty, Alert } from 'antd';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { fetchContacts } from '../../redux/operations';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        gap: 12,\n      }}\n    >\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} contact={{ id, name, number }} />\n      ))}\n      {isLoading && !error && <Loader size=\"large\" />}\n      {error && <Alert message=\"Error fetching contacts\" type=\"error\" />}\n      {!isLoading && filteredContacts.length === 0 && (\n        <Empty description=\"The Phonebook is empty. Add your first contact.\" />\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input } from 'antd';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nconst { Search } = Input;\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => dispatch(setFilter(e.target.value.trim()));\n\n  return (\n    <div style={{ marginBottom: 12 }}>\n      <label>\n        Filter contacts by name:\n        <Search\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search by name\"\n          size=\"large\"\n          value={filter}\n          onChange={handleFilterChange}\n          disabled={useSelector(selectContacts).length === 0}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { Container } from './Container.styled';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <Container>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Container>\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 90vh;\n  text-align: center;\n`;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleSubmit","e","preventDefault","contact","find","Notiflix","concat","isNumberExist","_ref2","replace","addContact","_jsxs","onSubmit","children","_jsx","Input","type","placeholder","size","value","onChange","target","pattern","title","required","prefix","UserOutlined","PhoneOutlined","Button","onClick","style","margin","Meta","Card","showModal","setShowModal","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","handleDelete","deleteContact","id","handleCancel","extra","width","marginBottom","description","href","fontSize","Popconfirm","onConfirm","message","onCancel","okText","cancelText","danger","Modal","visible","footer","editContatc","className","filteredContacts","useEffect","fetchContacts","display","flexWrap","justifyContent","gap","map","ContactItem","Loader","Alert","length","Empty","Search","setFilter","trim","disabled","_Fragment","HelmetProvider","Helmet","Container","ContactForm","Filter","ContactList","styled","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}