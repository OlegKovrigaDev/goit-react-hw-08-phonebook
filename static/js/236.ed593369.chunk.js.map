{"version":3,"file":"static/js/236.ed593369.chunk.js","mappings":"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","sources":["pages/Container.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 90vh;\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../redux/auth/auth-operations';\nimport { Button, Form, Input } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'; // Import Ant Design icons\n\nconst RegisterForm = () => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(state => state.auth);\n\n  const onFinish = values => {\n    const { name, email, password, confirm } = values;\n\n    if (password === confirm) {\n      dispatch(register({ name, email, password }));\n      !isLoading && !error && form.resetFields();\n    }\n  };\n\n  const formItemLayout = {\n    labelCol: {\n      span: 24,\n    },\n    wrapperCol: {\n      span: 24,\n    },\n  };\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 4,\n      },\n    },\n  };\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      size={'default'}\n      initialValues={{\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86',\n      }}\n      style={{\n        width: 300,\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input placeholder=\"Email\" prefix={<UserOutlined />} size=\"large\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password\n          placeholder=\"Password\"\n          prefix={<LockOutlined />}\n          size=\"large\"\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(\n                new Error('The new password that you entered does not match!')\n              );\n            },\n          }),\n        ]}\n      >\n        <Input.Password\n          placeholder=\"Confirm Password\"\n          prefix={<LockOutlined />}\n          size=\"large\"\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"name\"\n        tooltip=\"What do you want others to call you?\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your name!',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input placeholder=\"Name\" prefix={<UserOutlined />} size=\"large\" />\n      </Form.Item>\n\n      <Form.Item {...tailFormItemLayout}>\n        <Button block size=\"large\" type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\nimport { Container } from './Container.styled';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <Container>\n          <RegisterForm />\n        </Container>\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_Form$useForm","Form","form","_slicedToArray","dispatch","useDispatch","_useSelector","useSelector","state","auth","isLoading","error","_jsxs","_objectSpread","labelCol","span","wrapperCol","name","onFinish","values","email","password","confirm","register","resetFields","size","initialValues","residence","prefix","style","width","scrollToFirstError","children","_jsx","rules","type","message","required","Input","placeholder","UserOutlined","hasFeedback","LockOutlined","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","tooltip","whitespace","xs","offset","sm","Button","block","htmlType","Register","HelmetProvider","Helmet","RegisterForm"],"sourceRoot":""}