{"version":3,"file":"static/js/898.fe45c50d.chunk.js","mappings":"sQAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EACrCC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAC5CC,EAAkB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,SAAU,EAEpDC,GAAyBC,EAAAA,EAAAA,IACpC,CAACX,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAO,GAAO,OAAAA,EAAJC,KACnBC,cAAcC,SAASV,EAAOS,cAAc,GAErD,I,8BCwEF,EA9EoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACXf,GAAWgB,EAAAA,EAAAA,IAAYlB,GAC7BmB,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BN,EAAIQ,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAe,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAU,CAAElB,KAAMA,EAAMa,OAAQA,GAMtC,GAJuBxB,EAAS8B,MAC9B,SAAApB,GAAO,OAAAA,EAAJC,KAAgBC,gBAAkBiB,EAAQlB,KAAKC,aAAa,IAI/DmB,IAAAA,OAAAA,QACE,QAAQ,qBAADC,OACcH,EAAQlB,KAAI,oBACjC,UAJJ,CASA,IAAMsB,EAAgBjC,EAAS8B,MAC7B,SAAAI,GAAA,IAAGV,EAAMU,EAANV,OAAM,OACPK,EAAQL,OAAOW,QAAQ,MAAO,MAAQX,EAAOW,QAAQ,MAAO,GAAG,IAG/DF,EACFF,IAAAA,OAAAA,QACE,QAAQ,UAADC,OACGH,EAAQL,OAAM,4BACxB,OAKJV,GAASsB,EAAAA,EAAAA,IAAWP,IACpBR,EAAQ,IACRI,EAAU,IAlBV,CAmBF,EAMA,OACEY,EAAAA,EAAAA,MAAA,QAAMC,SAAUZ,EAAaa,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,OACL/B,KAAK,OACLgC,YAAY,aACZC,MAAOjC,EACPkC,SAZmB,SAAAlB,GAAC,OAAIN,EAAQM,EAAEmB,OAAOF,MAAO,EAahDG,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEVT,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,MACL/B,KAAK,SACLgC,YAAY,qBACZC,MAAOpB,EACPqB,SArBqB,SAAAlB,GAAC,OAAIF,EAAUE,EAAEmB,OAAOF,MAAO,EAsBpDG,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEVT,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAACR,KAAK,UAAUS,QAASzB,EAAc0B,MAAO,CAAEC,OAAQ,IAAKd,SAAC,kBAK3E,E,4DC7EQe,EAASC,EAAAA,EAAAA,KAkGjB,I,EAAA,EAhGA,SAAoB7C,GAAe,IAAZmB,EAAOnB,EAAPmB,QACff,GAAWC,EAAAA,EAAAA,MAEjBE,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CuC,EAASrC,EAAA,GAAEsC,EAAYtC,EAAA,GAC9BG,GAA8BJ,EAAAA,EAAAA,UAASW,EAAQlB,MAAKY,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA7CoC,EAAOnC,EAAA,GAAEoC,EAAUpC,EAAA,GAC1BqC,GAAkC1C,EAAAA,EAAAA,UAASW,EAAQL,QAAOqC,GAAAzC,EAAAA,EAAAA,GAAAwC,EAAA,GAAnDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAQxBG,EAAe,WAAH,OAASlD,GAASmD,EAAAA,EAAAA,IAAcpC,EAAQqC,IAAK,EASzDC,EAAe,WAAH,OAASV,GAAa,EAAO,EAM/C,OACEpB,EAAAA,EAAAA,MAACkB,EAAAA,EAAI,CACHP,MAAOnB,EAAQlB,KACfyD,OACE5B,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAACR,KAAK,UAAUS,QAjBV,WAAH,OAASM,GAAa,EAAM,EAiBKlB,SAAC,SAI9Ca,MAAO,CAAEiB,MAAO,IAAKC,aAAc,IAAK/B,SAAA,EAExCC,EAAAA,EAAAA,KAACc,EAAI,CACHN,MAAM,iBACNuB,aAAa/B,EAAAA,EAAAA,KAAA,KAAGgC,KAAI,OAAAxC,OAASH,EAAQL,QAASe,SAAEV,EAAQL,SACxD4B,MAAO,CAAEkB,aAAc,GAAIG,SAAU,OAGvCjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACT1B,MAAM,qBACNuB,YAAY,uCACZI,UAxCU,WACdX,IACAY,EAAAA,GAAAA,QAAgB,kBAClB,EAsCMC,SArCS,WAAH,OAASD,EAAAA,GAAAA,MAAc,WAAY,EAsCzCE,OAAO,MACPC,WAAW,KAAIxC,UAEfC,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAAC8B,QAAM,EAAAzC,SAAC,cAGjBC,EAAAA,EAAAA,KAACyC,EAAAA,EAAK,CACJC,QAAS1B,EACTqB,SAAUV,EACVgB,OAAQ,EACN3C,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAAcC,QAASgB,EAAa5B,SAAC,UAAhC,WAGZC,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAAYR,KAAK,UAAUS,QA7CvB,WACjBM,GAAa,GACb3C,GAASsE,EAAAA,EAAAA,IAAY,CAAElB,GAAIrC,EAAQqC,GAAIvD,KAAM+C,EAASlC,OAAQsC,IAChE,EA0C8DvB,SAAC,QAA3C,SAGZA,UAEFF,EAAAA,EAAAA,MAAA,OAAKgD,UAAU,gBAAe9C,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,OACLE,MAAOc,EACPb,SAhDe,SAAAlB,GAAC,OAAIgC,EAAWhC,EAAEmB,OAAOF,MAAO,EAiD/CG,QAAQ,wHACRC,MAAM,yIACNC,UAAQ,KAEVT,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAK,OACLE,MAAOkB,EACPjB,SAvDiB,SAAAlB,GAAC,OAAIoC,EAAapC,EAAEmB,OAAOF,MAAO,EAwDnDG,QAAQ,+FACRC,MAAM,+DACNC,UAAQ,WAMpB,E,UCtDA,EAhCoB,WAClB,IAAMqC,GAAmBtE,EAAAA,EAAAA,IAAYR,GAC/BH,GAAQW,EAAAA,EAAAA,IAAYZ,GACpBG,GAAYS,EAAAA,EAAAA,IAAYV,GAExBQ,GAAWC,EAAAA,EAAAA,MAMjB,OAJAwE,EAAAA,EAAAA,YAAU,WACRzE,GAAS0E,EAAAA,EAAAA,MACX,GAAG,CAAC1E,KAGFuB,EAAAA,EAAAA,MAAA,OACEe,MAAO,CACLqC,QAAS,OACTC,SAAU,OACVC,eAAgB,SAChBC,IAAK,IACLrD,SAAA,CAED+C,EAAiBO,KAAI,SAAAnF,GAAA,IAAGwD,EAAExD,EAAFwD,GAAIvD,EAAID,EAAJC,KAAMa,EAAMd,EAANc,OAAM,OACvCgB,EAAAA,EAAAA,KAACsD,EAAW,CAAUjE,QAAS,CAAEqC,GAAAA,EAAIvD,KAAAA,EAAMa,OAAAA,IAAzB0C,EAAqC,IAExD3D,IAAcF,IAASmC,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CAACC,KAAK,UACpC3F,IAASmC,EAAAA,EAAAA,KAACyD,EAAAA,EAAK,CAACrB,QAAQ,0BAA0BlC,KAAK,WACtDnC,GAAyC,IAA5B+E,EAAiBY,SAC9B1D,EAAAA,EAAAA,KAAC2D,EAAAA,EAAK,CAAC5B,YAAY,sDAI3B,E,UCpCQ6B,EAAW3D,EAAAA,EAAAA,OAyBnB,EAvBe,WACb,IAAM3B,GAAWC,EAAAA,EAAAA,MACXZ,GAASa,EAAAA,EAAAA,IAAYd,GAI3B,OACEsC,EAAAA,EAAAA,KAAA,OAAKY,MAAO,CAAEkB,aAAc,IAAK/B,UAC/BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,4BAELC,EAAAA,EAAAA,KAAC4D,EAAM,CACL1D,KAAK,OACL/B,KAAK,SACLgC,YAAY,iBACZC,MAAOzC,EACP0C,SAXmB,SAAAlB,GAAC,OAAIb,GAASuF,EAAAA,EAAAA,GAAU1E,EAAEmB,OAAOF,MAAM0D,QAAS,EAYnEC,SAAiD,KAAvCvF,EAAAA,EAAAA,IAAYlB,GAAgBoG,aAKhD,E,SC3BaM,E,QAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wHCuBnC,MAlBA,WACE,OACEnE,EAAAA,EAAAA,KAAAoE,EAAAA,SAAA,CAAArE,UACEF,EAAAA,EAAAA,MAACwE,EAAAA,GAAc,CAAAtE,SAAA,EACbC,EAAAA,EAAAA,KAACsE,EAAAA,GAAM,CAAAvE,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBAETF,EAAAA,EAAAA,MAACmE,EAAS,CAAAjE,SAAA,EACRC,EAAAA,EAAAA,KAACuE,EAAW,KACZvE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACwE,EAAM,KACPxE,EAAAA,EAAAA,KAACyE,EAAW,WAKtB,C","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Container.styled.js","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from '../../redux/selectors';\nimport { Input, Button } from 'antd';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = { name: name, number: number };\n\n    const isContactExist = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${contact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    const isNumberExist = contacts.find(\n      ({ number }) =>\n        contact.number.replace(/\\D/g, '') === number.replace(/\\D/g, '')\n    );\n\n    if (isNumberExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number ${contact.number} is already in contacts!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleNameChange = e => setName(e.target.value);\n\n  const handleNumberChange = e => setNumber(e.target.value);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name:</label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleNameChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label>Number:</label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleNumberChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"primary\" onClick={handleSubmit} style={{ margin: 12 }}>\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact, editContatc } from '../../redux/operations';\nimport { Modal, Input, Button, message, Popconfirm, Card } from 'antd';\n\nconst { Meta } = Card;\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const confirm = () => {\n    handleDelete();\n    message.success('Contact deleted');\n  };\n  const cancel = () => message.error('Canceled');\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  const handleEdit = () => setShowModal(true);\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContatc({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => setShowModal(false);\n\n  const handleNameChange = e => setNewName(e.target.value);\n\n  const handleNumberChange = e => setNewNumber(e.target.value);\n\n  return (\n    <Card\n      title={contact.name}\n      extra={\n        <Button type=\"primary\" onClick={handleEdit}>\n          Edit\n        </Button>\n      }\n      style={{ width: 300, marginBottom: 16 }}\n    >\n      <Meta\n        title=\"Contact Number\"\n        description={<a href={`tel:${contact.number}`}>{contact.number}</a>}\n        style={{ marginBottom: 12, fontSize: 24 }}\n      />\n\n      <Popconfirm\n        title=\"Delete the contact\"\n        description=\"Are you sure to delete this contact?\"\n        onConfirm={confirm}\n        onCancel={cancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <Button danger>Delete</Button>\n      </Popconfirm>\n\n      <Modal\n        visible={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" type=\"primary\" onClick={handleSave}>\n            Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>New Name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label>New Number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number format could be: +1 555 1234567 or 555 1234567.\"\n            required\n          />\n        </div>\n      </Modal>\n    </Card>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Empty, Alert } from 'antd';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport { fetchContacts } from '../../redux/operations';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        gap: 12,\n      }}\n    >\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} contact={{ id, name, number }} />\n      ))}\n      {isLoading && !error && <Loader size=\"large\" />}\n      {error && <Alert message=\"Error fetching contacts\" type=\"error\" />}\n      {!isLoading && filteredContacts.length === 0 && (\n        <Empty description=\"The Phonebook is empty. Add your first contact.\" />\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input } from 'antd';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\n\nconst { Search } = Input;\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => dispatch(setFilter(e.target.value.trim()));\n\n  return (\n    <div style={{ marginBottom: 12 }}>\n      <label>\n        Filter contacts by name:\n        <Search\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search by name\"\n          value={filter}\n          onChange={handleFilterChange}\n          disabled={useSelector(selectContacts).length === 0}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  text-align: center;\n`;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { Container } from './Container.styled';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <Container>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Container>\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleSubmit","e","preventDefault","contact","find","Notiflix","concat","isNumberExist","_ref2","replace","addContact","_jsxs","onSubmit","children","_jsx","Input","type","placeholder","value","onChange","target","pattern","title","required","Button","onClick","style","margin","Meta","Card","showModal","setShowModal","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","handleDelete","deleteContact","id","handleCancel","extra","width","marginBottom","description","href","fontSize","Popconfirm","onConfirm","message","onCancel","okText","cancelText","danger","Modal","visible","footer","editContatc","className","filteredContacts","useEffect","fetchContacts","display","flexWrap","justifyContent","gap","map","ContactItem","Loader","size","Alert","length","Empty","Search","setFilter","trim","disabled","Container","styled","_templateObject","_taggedTemplateLiteral","_Fragment","HelmetProvider","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}